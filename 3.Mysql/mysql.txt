------------------------------------

1--》char与varchar区别
------------------------------------
char(16) 定长字符类型(16位)
varchar(16) 变长字符类型(16位)
其中char占用数据库空间但是查询速度快和varchar占用空间少,查询速度慢,如果空间足够用char更效率
------------------------------------

2--》索引相关
------------------------------------

------------------------------------

3--》触发器相关
------------------------------------
触发器--查看 
SHOW TRIGGERS\G 
创建 
DROP TRIGGER IF EXISTS t_afterinsert_on_tab1;
CREATE TRIGGER t_afterinsert_on_tab1 
AFTER INSERT ON tab1
FOR EACH ROW
BEGIN
     insert into tab2(tab2_id) values(new.tab1_id);
END;
触发器的优点
（1）触发器的”自动性”
对程序员来说，触发器是看不到的，但是他的确做事情了，如果不用触发器的话，你更新了user表的name字段时，你还要写代码去更新其他表里面的冗余字段，我举例子，只是一张表，如果是几张表都有冗余字段呢，你的代码是不是要写很多呢，看上去是不是很不爽呢
（2）触发器的数据完整性
触发器有回滚性，举个例子，我发现我很喜欢举子，就是你要更新五张表的数据，不会出现更新了二个张表，而另外三张表没有更新。
但是如果是用php代码去写的话，就有可能出现这种情况的，比如你更新了二张表的数据，这个时候，数据库挂掉了。你就郁闷了，有的更新了，有的没更新。这样页面显示不一致了，变有bug了


------------------------------------

4--》存储过程
------------------------------------
存储过程--查看所有的
show procedure status;
创建
CREATE  PROCEDURE  num_from_employee (IN emp_id INT, OUT count_num INT )  
          READS SQL DATA  
          BEGIN  
              SELECT  COUNT(*)  INTO  count_num  
              FROM  employee  
              WHERE  d_id=emp_id ;  
          END 
)存储过程能实现较快的执行速度。
如果某一操作包含大量的Transaction-SQL代码或分别被多次执行，那么存储过程要比批处理的执行速度快很多。因为存储过程是预编译的。在首次运行一个存储过程时查询，优化器对其进行分析优化，并且给出最终被存储在系统表中的执行计划。而批处理的Transaction-SQL语句在每次运行时都要进行编译和优化，速度相对要慢一些。
心得：编译优化，快！
2)存储过程允许标准组件是编程。
存储过程被创建后，可以在程序中被多次调用，而不必重新编写该存储过程的SQL语句。而且数据库专业人员可以随时对存储过程进行修改，对应用程序源代码毫无影响。
心得：封装与抽象，简单调用
3)存储过程可以用流控制语句编写，有很强的灵活性，可以完成复杂的判断和较复杂的运算。
心得：功能强大，逻辑强大
4)存储过程可被作为一种安全机制来充分利用。
系统管理员通过执行某一存储过程的权限进行限制，能够实现对相应的数据的访问权限的限制，避免了非授权用户对数据的访问，保证了数据的安全。
心得：限制与安全
5)存储过程能过减少网络流量。
针对同一个数据库对象的操作（如查询、修改），如果这一操作所涉及的Transaction-SQL语句被组织程存储过程，那么当在客户计算机上调用该存储过程时，网络中传送的只是该调用语句，从而大大增加了网络流量并降低了网络负载。
心得：减少网络流量（封装的好）
------------------------------------

5--》 MyISAM与InnoDB区别(锁机制)
------------------------------------



------------------------------------

6--》mysql优化
------------------------------------
1.表设计合理，字段合理，索引，
2.满足一定条件下，触发器，存储过程
3，前期阶段开启慢查询（2s以上），增加连接数max_connections
4.explain分析sql语句（主要参数type key rows）
5，分表，分库
6.数据量大，定时任务分批处理，得出所需数据
其他：
使用连接（JOIN）来代替子查询(Sub-Queries)  join查询多条记录 子查询查询特定条件下的记录（慢）
7、使用联合(UNION)来代替手动创建的临时表 

------------------------------------

8--》数据库中的事务是什么?
------------------------------------
答:事务（transaction）是作为一个单元的一组有序的数据库操作。如果组中的所有操作都成功，则认为事务成功，即使只有一个操作失败，事务也不成功。如果所有操作完成，
开启事务方法startTrans()
事务提交方法commit()
事务回滚方法rollback()
尽管事务是维护数据库完整性的一个非常好的方法，但却因为它的独占性，有时会影响数据库的性能，尤其是在很大的应用系统中。由于在事务执行的过程中，数据库将会被锁定，因此其它的用户请求只能暂时等待直到该事务结束。
如果一个数据库系统只有少数几个用户 来使用，事务造成的影响不会成为一个太大的问题；但假设有成千上万的用户同时访问一个数据库系统，例如访问一个电子商务网站，就会产生比较严重的响应延迟。 
















