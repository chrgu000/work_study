------------------------------------

1--》socket url 分享
------------------------------------
https://blog.csdn.net/ping20/article/details/79595632

https://blog.csdn.net/u012728971/article/details/80685796

1--》 socket
Socket两个基本概念：客户方和服务方。当两个应用之间需要采用SOCKET通信时，首先需要在两个应用之间（可能位于同一台机器，也可能位于不同的机器）建立SOCKET连接，
发起呼叫连接请求的一方为客户方，接受呼叫连接请求的一方成为服务方。客户方和服务方是相对的，同一个应用可以是客户方，也可以是服务方。
Socket:又称”套接字”，应用程序通过”套接字”向网络发送请求或应答，它是一个针对TCP和UDP编程的接口，借助它建立TCP/UDP连接。
socket连接就是所谓的长连接,理论上客户端和服务器端一旦建立起连接将不会主动断掉HTTP协议一Socket连接- -TCP连接关系:
1.HTTP协议提供了封装或者显示数据的具体形式;
2.Sockct连接提供了网络通信的能力;
3.TCP连接提供如何在网络中传输;
4.socket是纯C语言的,跨平台;
5.HTTP协议是基于socket的，底层使用的就是socket;
6.创建Socket连接时，可以指定使用的传输层协议(TCP或UDP)，当使用TCP协议进行连接时，该Socket连接就是一个TCP连接。
--------------------- 

1--》tcp和udp的区别
TCP：是面向连接的流传输控制协议，具有高可靠性，确保传输数据的正确性，有验证重发机制，因此不会出现丢失或乱序。
UDP：是无连接的数据报服务，不对数据报进行检查与修改，无须等待对方的应答，会出现分组丢失、重复、乱序，但具有较好的实时性，UDP段结构比TCP的段结构简单，因此网络开销也小。

1.基于连接和无连接
2.对系统资源要求(TCP较多,UDP较少)
3.UDP程序结构较简单
4.TCP是流模式,UDP是数据报模式
5.可靠性:TCP保证数据正确性,UDP可能丢包，不保证数据准确性Socket通信流程图image

1--》tcp连接建立的时候3次握手，断开连接的4次握手的具体过程
建立连接采用的3次握手协议，具体是指：
第一次握手是客户端connect连接到server，server accept client的请求之后，向client端发送一个消息，相当于说我都准备好了，你连接上我了，这是第二次握手，
第3次握手就是client向server发送的，就是对第二次握手消息的确认。之后client和server就开始通讯了。
断开连接的4次握手,具体如下：
断开连接的一端发送close请求是第一次握手，另外一端接收到断开连接的请求之后需要对close进行确认，发送一个消息，这是第二次握手，发送了确认消息之后还要向对端发送close消息，要关闭对对端的连接，
这是第3次握手，而在最初发送断开连接的一端接收到消息之后，进入到一个很重要的状态time_wait状态，这个状态也是面试官经常问道的问题，
最后一次握手是最初发送断开连接的一端接收到消息之后。对消息的确认。

1--》TCP为什么不是两次连接？而是三次握手？

如果A与B两个进程通信，如果仅是两次连接。可能出现的一种情况就是：A发送完请报文以后，由于网络情况不好，出现了网络拥塞，即B延时很长时间后收到报文，
即此时A将此报文认定为失效的报文。B收到报文后，会向A发起连接。此时两次握手完毕，B会认为已经建立了连接可以通信，B会一直等到A发送的连接请求，
而A对失效的报文回复自然不会处理。依次会陷入B忙等的僵局，造成资源的浪费。

1--》进程间通讯的方式有哪些，各有什么优缺点
进程间通信
Linux 进程间通信（IPC）以下以几部分发展而来：
早期UNIX进程间通信、基于System V进程间通信、基于Socket进程间通信和POSIX进程间通信。
UNIX进程间通信方式包括：管道、FIFO、信号。
System V进程间通信方式包括：System V消息队列、System V信号灯、System V共享内存、
POSIX进程间通信包括：posix消息队列、posix信号灯、posix共享内存。
现在linux使用的进程间通信方式：
（1）管道（pipe）和有名管道（FIFO）
（2）信号（signal）
（3）消息队列
（4）共享内存
（5）信号量
（6）套接字（socket)


--------------------- 
